#### 1 ####
library(readxl)
library(mvtnorm)

rocketdata <- read_xlsx("RocketData.xlsx")
head(rocketdata)
X <- cbind(1, x)
model <- lm(Y~rocketdata$X, data = rocketdata)
summary(model)

## 2 ##
data <- read_xlsx("TimeDeliveryData.xlsx")
head(data)
X <- cbind(1, data$X1, data$X2)
model2 <- lm(Y~X1+X2, data = data)
summary(model2)

## 3 ## 
# 1
rocketdata <- read_xlsx("RocketData.xlsx")
head(rocketdata)
X <- cbind(1, rocketdata$X)
sigma2 <- t(rocketdata$Y) %*% (diag(x = 1 , nrow = 20, ncol = 20) - X %*% solve(t(X) %*% X ) %*% t(X)) %*% rocketdata$Y
answer <- sigma2 / 18
answer

#2
betas <- model$coefficients
tnot <- betas[1] / sqrt(var(betas))
tnot
tone <- betas[2] / sqrt(var(betas))
tone

### 4 ###
n <- 5e3
samples <- numeric(length = n)
for (i in 1 : n){
  z1 <- rnorm(n)
  z2 <- rnorm(n)
  z3 <- rnorm(n)
  w <- z1^2 + z2^2 + z3^2
  samples[i] = w
}
head(samples)
hist(samples, breaks = 40)

## calculating mean and vaeriance of w ##
mean(samples)
var(samples)

#### calculating theoretical mean and variance ###
theo_mean <- 3
theo_var <- 2*3


#### 5 #####
X <- matrix(rnorm(40) , nrow = 8, ncol = 5)
px <- X %*% solve(t(X) %*% X) %*% t(X)

px_squared <- px %*% px
print(identical(px, px_squared)) ## for checking whether px is idempotent or not

## b part ##
mu <- matrix(0, nrow = 8, ncol = 1)
I <- diag(x = 1, nrow = 8, ncol = 8)
Yy <- rnorm(5e3, mean = mu)
u <- t(Yy) %*% px %*% Y

### 6 ###
n <- 5000
px1 <- X %*% solve(t(X) %*% X) %*% t(X)
dim(px1)
I8 <- diag(x =1, 8,8)
px2 <- I8 - px1
mu <- matrix(0, nrow = 8, ncol = 1)
y <- dmvnorm(n, mean = mu, sigma = I8)
dim(y)

# Calculating the degrees of freedom (df) for ANOVA
df1 <- sum(rank(px2))  # Sum of ranks of px2
df2 <- sum(rank(px1))  # Sum of ranks of px1

# Calculating the numerator and denominator for the F-statistic
num <- (t(y) %*% px2 %*% y) / df1
denom <- (t(y) %*% px1 %*% y) / df2

# Calculating the F-statistic
f <- num / denom


